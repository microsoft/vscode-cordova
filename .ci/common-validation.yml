steps:
  - task: NodeTool@0
    displayName: "Use Node 18.x"
    inputs:
      versionSpec: 18.x
  - bash: npm install gulp cordova @vscode/vsce -g --force
    displayName: "npm install gulp cordova @vscode/vsce -g"
  - bash: npm ci
    displayName: "npm ci"
  - bash: npm run build
    displayName: "npm run build"
  - bash: |
      /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
      echo ">>> Started xvfb"
    displayName: Start xvfb
    condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))
  - bash: "npm test --verbose"
    displayName: "Run host tests"
    env:
      DISPLAY: ":99.0"
  - bash: npm run test-localization --verbose
    displayName: "Run localization tests"
    env:
      DISPLAY: ":99.0"
  - task: PublishTestResults@2
    displayName: "Publish Extension Test Results"
    inputs:
      testResultsFiles: test/ExtensionTests.xml
      failTaskOnFailedTests: true
      testRunTitle: "[Extension Context] $(Agent.OS) Cordova tools unit tests - Attempt №$(System.JobAttempt)"
    condition: always()
  - task: PublishTestResults@2
    displayName: "Publish Localization Test Results"
    inputs:
      testResultsFiles: test/LocalizationTests.xml
      failTaskOnFailedTests: true
      testRunTitle: "[Localization Context] $(Agent.OS) Cordova unit tests - Attempt №$(System.JobAttempt)"
    condition: always()
  - task: BatchScript@1
    displayName: "Run script prepareBuild.bat"
    inputs:
      filename: prepareBuild.bat
      modifyEnvironment: true
    condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))
  - bash: gulp
    displayName: "Build and run hostless tests"
    env:
      DISPLAY: ":99.0"
